diff --git a/index.d.ts b/index.d.ts
index 594559f8a1102334a39a37ef6df47417a07cce35..07bf252896907e8358f18445014fac8f707870dc 100755
--- a/index.d.ts
+++ b/index.d.ts
@@ -21,7 +21,23 @@ interface WinBox {
     root: Node;
     title: string;
     url: string;
+
+    width: number | string;
+    height: number | string;
+    minheight: number | string;
+    minwidth: number | string;
+    maxheight: number | string;
+    maxwidth: number | string;
+
+    top: number | string;
+    right: number | string;
+    bottom: number | string;
+    left: number | string;
+
     onfocus: (this: WinBox) => void;
+    onmaximize: (this: WinBox, state?: boolean) => void;
+    onminimize: (this: WinBox, state?: boolean) => void;
+    onrestore: (this: WinBox, state?: boolean) => void;
     onblur: (this: WinBox) => void;
     onresize: (this: WinBox, width: number, height: number) => void;
     onmove: (this: WinBox, x: number, y: number) => void;
@@ -39,10 +55,15 @@ interface WinBox {
     fullscreen(state?: boolean): WinBox;
     close(force?: boolean): boolean | void;
     move(x?: string | number, y?: string | number, skipUpdate?: boolean): WinBox;
-    resize(w?: string | number, h?: string | number, skipUpdate?: boolean): WinBox;
+    resize(
+        w?: string | number,
+        h?: string | number,
+        skipUpdate?: boolean
+    ): WinBox;
     addClass(classname: string): WinBox;
     removeClass(classname: string): WinBox;
 }
+
 declare namespace WinBox {
     interface WinBoxConstructor {
         (title: string, params?: Params): WinBox;
@@ -51,66 +72,65 @@ declare namespace WinBox {
         new (params: Params): WinBox;
     }
 
-    interface Params {
-        background?: string | undefined;
-        body?: HTMLElement | undefined;
-        border?: string | number | undefined;
-        bottom?: string | number | undefined;
-        class?: string | string[] | undefined;
-        height?: string | number | undefined;
-        html?: string | undefined;
-        id?: string | number | undefined;
-        index?: number | undefined;
-        left?: string | number | undefined;
-        max?: boolean | undefined;
-        minheight?: string | number | undefined;
-        minwidth?: string | number | undefined;
-        modal?: boolean | undefined;
-        mount?: Node | undefined;
-        right?: string | number | undefined;
-        root?: Node | undefined;
-        splitscreen?: boolean | undefined;
-        title?: string | undefined;
-        top?: string | number | undefined;
-        url?: string | undefined;
-        width?: string | number | undefined;
-        x?: "right" | "center" | string | number | undefined;
-        y?: "bottom" | "center" | string | number | undefined;
-        onclose?: ((this: WinBox, force?: boolean) => boolean) | undefined;
-        onfocus?: ((this: WinBox) => void) | undefined;
-        onblur?: ((this: WinBox) => void) | undefined;
-        onresize?: ((this: WinBox, width: number, height: number) => void) | undefined;
-        onmove?: ((this: WinBox, x: number, y: number) => void) | undefined;
-    }
+    type Params = Partial<{
+        header: number;
+        // configuration:
+        index: number;
+        id: string;
+        root: HTMLElement;
+        template: HTMLElement;
+        class: string[];
 
-    interface Params {
-        background?: string | undefined;
-        body?: HTMLElement | undefined;
-        border?: string | number | undefined;
-        bottom?: string | number | undefined;
-        class?: string | string[] | undefined;
-        height?: string | number | undefined;
-        html?: string | undefined;
-        id?: string | number | undefined;
-        index?: number | undefined;
-        left?: string | number | undefined;
-        max?: boolean | undefined;
-        modal?: boolean | undefined;
-        mount?: Node | undefined;
-        right?: string | number | undefined;
-        root?: Node | undefined;
-        title?: string | undefined;
-        top?: string | number | undefined;
-        url?: string | undefined;
-        width?: string | number | undefined;
-        x?: "right" | "center" | string | number | undefined;
-        y?: "bottom" | "center" | string | number | undefined;
-        onclose?: ((this: WinBox, force?: boolean) => boolean) | undefined;
-        onfocus?: ((this: WinBox) => void) | undefined;
-        onblur?: ((this: WinBox) => void) | undefined;
-        onresize?: ((this: WinBox, width: number, height: number) => void) | undefined;
-        onmove?: ((this: WinBox, x: number, y: number) => void) | undefined;
-    }
+        // appearance:
+        title: string;
+        background: string;
+        border: number;
+        icon: boolean;
+
+        // initial state:
+        modal: boolean;
+        max: boolean;
+        min: boolean;
+        hidden: boolean;
+
+        // dimension:
+        width: number | string;
+        height: number | string;
+        minheight: number | string;
+        minwidth: number | string;
+        maxheight: number | string;
+        maxwidth: number | string;
+        autosize: boolean;
+
+        // position:
+        x: number;
+        y: number;
+
+        // viewport boundaries:
+        top: number | string;
+        right: number | string;
+        bottom: number | string;
+        left: number | string;
+
+        // contents (choose from):
+        url: false | string;
+        mount: false | HTMLElement;
+        html: string;
+
+        // callbacks:
+        oncreate?: (options: Params) => void;
+        onshow?: (this: WinBox) => void;
+        onhide?: (this: WinBox) => void;
+        onfocus?: (this: WinBox) => void;
+        onblur?: (this: WinBox) => void;
+        onresize?: (this: WinBox, width: number, height: number) => void;
+        onmove?: (this: WinBox, x: number, y: number) => void;
+        onclose?: (this: WinBox, force?: boolean) => boolean;
+        onfullscreen?: (this: WinBox) => void;
+        onmaximize?: (this: WinBox, state?: boolean) => void;
+        onminimize?: (this: WinBox, state: boolean) => void;
+        onrestore?: (this: WinBox) => void;
+    }>;
 }
 
 declare const WinBox: WinBox.WinBoxConstructor & {
